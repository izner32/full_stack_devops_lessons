// LESSON 1.0 - INTRO 
// http client/library to make request to api to fetch data, similar to fetch but axios is much better 
// axios automatically transforms of json data unlike in fetch, it also alws cancelling request and request timeout 

// LESSON 1.1 - INTERFACE & FILES EXPLAIN

// LESSON 1.2. - GET REQUEST AND RESPONSE EXPLAIN - medyo hassle lang ang get request kailangan pang ang daming ispecify hays 
function getTodos() {
    axios({
        method: "get",
        url: "https://jsonplaceholder.typicode.com/todos",{
        params: { // this is optional 
            _limit: 5 // only show 5 
            }
        }
    })
    .then(res => console.log(res.data)); // response 
    .catch(err => console.error(err));
}

// another syntax for axios - it is .get by default so you could remove it but it's not recommended 
axios.get("https://jsonplaceholder.typicode.com/todos",
params: { _limit: 5 })
.then(res => console.log(res.data)); // response 
.catch(err => console.error(err));

// another syntax for url params 
axios.get("https://jsonplaceholder.typicode.com/todos?_limit=5") // still just the same, get the 5 json data | we could avoid all of this with graphql 
.then(res => console.log(res.data)); // response 
.catch(err => console.error(err));

// LESSON 1.3. - POST REQUEST 
function getTodos() {
    axios({
        method: "post",
        url: "https://jsonplaceholder.typicode.com/todos",
        data: { // this is what we're sending 
            title: "New Todo",
            completed:false
        }
    })
    .then(res => console.log(res.data)); // response 
    .catch(err => console.error(err));
}

// LESSON 1.4 - PUT/PATCH REQUEST 
function getTodos() {
    axios({
        method: "put", // updating
        url: "https://jsonplaceholder.typicode.com/todos/1", // specific data we're updating 
        data: { // this is what we're sending 
            title: "New Todo",
            completed:false
        }
    })
    .then(res => console.log(res.data)); // response 
    .catch(err => console.error(err));
}


// LESSON 1.5 - DELETE REQUEST 

// LESSON 1.6 - SIMULTANEOUS REQUESTS 

// LESSON 1.7 - INTERCEPTORS 

// LESSON 1.8 - CUSTOM HEADERS 

// LESSON 1.9 - TRANSFORM RESPONSE 

// LESSON 1.10 - GLOBALS 

// LESSON 1.11 - ERROR HANDLING 

// LESSON 1.12 - CANCEL TOKENS 

// LESSON 1.13 - AXIOS INSTANCES 

// LESSON 1.14 - TIMEOUT 